@model Web.ViewModels.PedidoViewModel


<div class="row">
	<h1>Crear Pedido</h1>
	<hr />
	<partial name="_Mensajes" />
	<div class="col-md-6">
		<form asp-action="CrearPedido">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="ClienteId" class="control-label">Cliente</label>
				<select asp-for="ClienteId" asp-items="@(new SelectList(Model.Clientes, "Id", "RazonSocial"))" class="form-control" required></select>
				<span asp-validation-for="ClienteId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="FechaPrometidaEntrega" class="control-label">Fecha de entrega prometida</label>
				<input asp-for="FechaPrometidaEntrega" class="form-control" required/>
				<span asp-validation-for="FechaPrometidaEntrega" class="text-danger"></span>
			</div>
			<div class="form-check">
				<input class="form-check-input" type="checkbox" id="pedidoExpress" name="PedidoExpress" asp-for="PedidoExpress">
				<label class="form-check-label" for="pedidoExpress">
					Crear pedido express
				</label>
			</div>
			<div class="form-group mt-2">
				<input type="submit" id="btnCrearPedido" value="Crear pedido" class="btn btn-primary"/>
			</div>
			
			<input type="hidden" id="lineasPedido" name="LineasPedido"/>
		</form>
	</div>
	<div class="col-md-6">
		<form>
			<div class="form-group">
				<label asp-for="LineaPedidoDto.ArticuloDto" class="control-label">Articulo</label>
				<select asp-for="LineaPedidoDto.ArticuloDto" class="form-control" required>
					@foreach (var articulo in Model.Articulos)
					{
						<option value="@articulo.Id" data-precio="@articulo.PrecioActual" data-stock="@articulo.Stock">@articulo.Nombre</option>
					}
				</select>
			</div>
			<div class="form-group">
				<label asp-for="LineaPedidoDto.Unidades" class="control-label">Cantidad de unidades</label>
				<input asp-for="LineaPedidoDto.Unidades" class="form-control" type="number" required/>
			</div>
			<div class="form-group mt-2">
				<button id="btnAgregarLinea" class="btn btn-primary">Añadir articulo</button>
			</div>
		</form>
		<div class="mt-2">
			<table class="table">
				<thead>
				<tr>
					<th>Articulo</th>
					<th>Cantidad</th>
					<th></th>
				</tr>
				</thead>
				<tbody>
				</tbody>
			</table>
		</div>
	</div>
</div>


@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		function guardarLineas(lineas) {
			localStorage.setItem('lineas', JSON.stringify(lineas));
		}

		function obtenerLineas() {
			var lineas = localStorage.getItem('lineas');
			if (lineas) {
				return JSON.parse(lineas);
			} else {
				return [];
			}
		}

		$(document).ready(function () {
			$("#btnAgregarLinea").click(function (event) {
				event.preventDefault();

				var articuloId = $("#LineaPedidoDto_ArticuloDto").val();
				var articuloNombre = $("#LineaPedidoDto_ArticuloDto option:selected").text();
				var articuloPrecio = $("#LineaPedidoDto_ArticuloDto option:selected").data('precio');
				var articuloStock = $("#LineaPedidoDto_ArticuloDto option:selected").data('stock');
				var unidades = $("#LineaPedidoDto_Unidades").val();

				if (unidades == null || unidades == "") {
					alert("Debe de ingresar la cantidad de unidades que desea del articulo.");
					return;
				}

				var linea = { ArticuloDto: { Id: articuloId, Nombre: articuloNombre, PrecioActual: articuloPrecio, Stock: articuloStock }, Unidades: unidades, PrecioUnitario: articuloPrecio };

				var lineas = obtenerLineas();
				lineas.push(linea);
				guardarLineas(lineas);

				actualizarTabla();
			});
		});


		function actualizarTabla() {
			var lineas = obtenerLineas();
			var tbody = $(".table tbody");
			tbody.empty(); // Elimina las filas existentes

			lineas.forEach(function (linea, index) {
				var fila = $("<tr></tr>");
				fila.append($("<td></td>").text(linea.ArticuloDto.Nombre));
				fila.append($("<td></td>").text(linea.Unidades));
				fila.append($("<td></td>").append($("<button class='btn btn-danger'></button>").text("Eliminar").click(function () {
					eliminarLinea(index);
				})));

				tbody.append(fila);
			});
		}

		function eliminarLinea(index) {
			var lineas = obtenerLineas();
			lineas.splice(index, 1); // Elimina la línea de pedido en el índice especificado
			guardarLineas(lineas);
			actualizarTabla(); // Actualiza la tabla para reflejar la línea de pedido eliminada
		}

		$("#btnCrearPedido").click(function (event) {
			var lineas = obtenerLineas();
			$("#lineasPedido").val(JSON.stringify(lineas));
		});

	</script>

	
	<script type="text/javascript">
		// Este script se encarga de limpiar el localStorage si se ha indicado que se debe limpiar
		$(document).ready(function () {
			var clearLocalStorage = '@ViewBag.ClearLocalStorage';
			if (clearLocalStorage == 'True') {
				localStorage.removeItem('lineas');
			}
		});
	</script>
}


